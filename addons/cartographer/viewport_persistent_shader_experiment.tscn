[gd_scene load_steps=18 format=2]

[sub_resource type="PlaneMesh" id=1]
size = Vector2( 20, 20 )
subdivide_width = 32
subdivide_depth = 32

[sub_resource type="ViewportTexture" id=2]
viewport_path = NodePath("Viewport")

[sub_resource type="SpatialMaterial" id=3]
resource_local_to_scene = true
albedo_texture = SubResource( 2 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorDistance" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=6]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeCompare" id=8]
default_input_values = [ 0, 0.0, 1, 0.1, 2, 1e-05 ]
function = 2

[sub_resource type="VisualShaderNodeVectorOp" id=9]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "color"

[sub_resource type="VisualShaderNodeTexture" id=11]
source = 1

[sub_resource type="VisualShaderNodeInput" id=12]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=13]
default_input_values = [ 0, 0.0, 1, 0.6, 2, 0.0 ]

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 17

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "uv"

[sub_resource type="VisualShaderNodeCompare" id=16]
default_input_values = [ 0, 0.0, 1, 0.2, 2, 1e-05 ]
function = 4

[sub_resource type="VisualShader" id=17]
resource_local_to_scene = true
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	float n_out3p0 = TIME;

// ScalarFunc:5
	float n_out5p0 = fract(n_out3p0);

// VectorCompose:4
	float n_in4p1 = 0.60000;
	float n_in4p2 = 0.00000;
	vec3 n_out4p0 = vec3(n_out5p0, n_in4p1, n_in4p2);

// Input:6
	vec3 n_out6p0 = vec3(UV, 0.0);

// Distance:11
	float n_out11p0 = distance(n_out4p0, n_out6p0);

// Compare:9
	float n_in9p1 = 0.20000;
	bool n_out9p0 = n_out11p0<n_in9p1;

// Input:17
	vec3 n_out17p0 = COLOR.rgb;

// VectorOp:10
	vec3 n_out10p0 = vec3(n_out9p0 ? 1.0 : 0.0) * n_out17p0;

// Compare:15
	float n_in15p1 = 0.10000;
	bool n_out15p0 = n_out5p0>n_in15p1;

// Texture:18
	vec3 n_out18p0;
	float n_out18p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, UV.xy, 0.0 );
		n_out18p0 = _tex_read.rgb;
		n_out18p1 = _tex_read.a;
	}

// VectorOp:16
	vec3 n_out16p0 = vec3(n_out15p0 ? 1.0 : 0.0) * n_out18p0;

// VectorOp:13
	vec3 n_out13p0 = n_out10p0 + n_out16p0;

// Output:0
	COLOR.rgb = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -693, -226 )
mode = 1
flags/light_only = false
nodes/fragment/3/node = SubResource( 12 )
nodes/fragment/3/position = Vector2( -540, -120 )
nodes/fragment/4/node = SubResource( 13 )
nodes/fragment/4/position = Vector2( -160, -120 )
nodes/fragment/5/node = SubResource( 14 )
nodes/fragment/5/position = Vector2( -360, -120 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -140, 0 )
nodes/fragment/9/node = SubResource( 16 )
nodes/fragment/9/position = Vector2( 60, 80 )
nodes/fragment/10/node = SubResource( 4 )
nodes/fragment/10/position = Vector2( 60, 260 )
nodes/fragment/11/node = SubResource( 5 )
nodes/fragment/11/position = Vector2( 60, -80 )
nodes/fragment/13/node = SubResource( 6 )
nodes/fragment/13/position = Vector2( 280, 340 )
nodes/fragment/15/node = SubResource( 8 )
nodes/fragment/15/position = Vector2( -580, 120 )
nodes/fragment/16/node = SubResource( 9 )
nodes/fragment/16/position = Vector2( -320, 380 )
nodes/fragment/17/node = SubResource( 10 )
nodes/fragment/17/position = Vector2( -260, 240 )
nodes/fragment/18/node = SubResource( 11 )
nodes/fragment/18/position = Vector2( -600, 380 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 0, 4, 0, 9, 0, 10, 0, 6, 0, 11, 1, 11, 0, 9, 0, 4, 0, 11, 0, 10, 0, 13, 0, 13, 0, 0, 0, 17, 0, 10, 1, 16, 0, 13, 1, 5, 0, 15, 0, 15, 0, 16, 0, 18, 0, 16, 1 )

[sub_resource type="ShaderMaterial" id=18]
resource_local_to_scene = true
shader = SubResource( 17 )

[node name="Spatial" type="Spatial"]

[node name="CSGMesh" type="CSGMesh" parent="."]
mesh = SubResource( 1 )
material = SubResource( 3 )

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 512, 512 )
hdr = false
disable_3d = true
usage = 0
render_target_v_flip = true
render_target_clear_mode = 1
gui_disable_input = true

[node name="ColorRect" type="ColorRect" parent="Viewport"]
material = SubResource( 18 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="TextureRect" type="TextureRect" parent="Viewport"]
anchor_right = 1.0
anchor_bottom = 1.0
