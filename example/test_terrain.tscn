[gd_scene load_steps=30 format=2]

[ext_resource path="res://addons/cartographer/meshes/clipmap_2.obj" type="ArrayMesh" id=1]
[ext_resource path="res://example/default_env.tres" type="Environment" id=4]
[ext_resource path="res://example/textures/uv.png" type="Texture" id=6]
[ext_resource path="res://addons/cartographer/meshes/clipmap_multi.obj" type="ArrayMesh" id=12]
[ext_resource path="res://addons/cartographer/terrain/carto_terrain.shader" type="Shader" id=13]

[sub_resource type="SpatialMaterial" id=1]
albedo_texture = ExtResource( 6 )

[sub_resource type="PrismMesh" id=2]

[sub_resource type="CubeMesh" id=3]
size = Vector3( 2, 2, 256 )

[sub_resource type="SphereMesh" id=4]
radius = 4.0
height = 8.0

[sub_resource type="VisualShaderNodeVectorCompose" id=5]

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 4, 4, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]

[sub_resource type="VisualShaderNodeVectorCompose" id=11]

[sub_resource type="VisualShaderNodeVectorDecompose" id=12]

[sub_resource type="VisualShaderNodeScalarFunc" id=13]
function = 1

[sub_resource type="VisualShaderNodeScalarFunc" id=14]
function = 0

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorDecompose" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShader" id=18]
code = "shader_type spatial;



void vertex() {
// Input:6
	vec3 n_out6p0 = VERTEX;

// VectorDecompose:7
	float n_out7p0 = n_out6p0.x;
	float n_out7p1 = n_out6p0.y;
	float n_out7p2 = n_out6p0.z;

// Input:14
	vec3 n_out14p0 = VERTEX;

// VectorDecompose:15
	float n_out15p0 = n_out14p0.x;
	float n_out15p1 = n_out14p0.y;
	float n_out15p2 = n_out14p0.z;

// VectorCompose:16
	float n_in16p2 = 0.00000;
	vec3 n_out16p0 = vec3(n_out15p0, n_out15p2, n_in16p2);

// VectorOp:11
	vec3 n_in11p1 = vec3(4.00000, 4.00000, 1.00000);
	vec3 n_out11p0 = n_out16p0 * n_in11p1;

// VectorDecompose:3
	float n_out3p0 = n_out11p0.x;
	float n_out3p1 = n_out11p0.y;
	float n_out3p2 = n_out11p0.z;

// ScalarFunc:4
	float n_out4p0 = cos(n_out3p0);

// ScalarFunc:5
	float n_out5p0 = sin(n_out3p1);

// ScalarOp:12
	float n_out12p0 = n_out4p0 * n_out5p0;

// ScalarOp:13
	float n_in13p1 = 0.50000;
	float n_out13p0 = n_out12p0 * n_in13p1;

// ScalarOp:8
	float n_out8p0 = n_out13p0 + n_out7p1;

// VectorCompose:10
	vec3 n_out10p0 = vec3(n_out7p0, n_out8p0, n_out7p2);

// Output:0
	VERTEX = n_out10p0;

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -671.5, 136 )
nodes/vertex/0/position = Vector2( 560, 180 )
nodes/vertex/3/node = SubResource( 12 )
nodes/vertex/3/position = Vector2( -200, 120 )
nodes/vertex/4/node = SubResource( 13 )
nodes/vertex/4/position = Vector2( 60, 100 )
nodes/vertex/5/node = SubResource( 14 )
nodes/vertex/5/position = Vector2( 60, 160 )
nodes/vertex/6/node = SubResource( 15 )
nodes/vertex/6/position = Vector2( -340, 260 )
nodes/vertex/7/node = SubResource( 16 )
nodes/vertex/7/position = Vector2( -180, 260 )
nodes/vertex/8/node = SubResource( 17 )
nodes/vertex/8/position = Vector2( 81.5, 283 )
nodes/vertex/10/node = SubResource( 5 )
nodes/vertex/10/position = Vector2( -29.5, 401 )
nodes/vertex/11/node = SubResource( 6 )
nodes/vertex/11/position = Vector2( -380, 120 )
nodes/vertex/12/node = SubResource( 7 )
nodes/vertex/12/position = Vector2( 240, 100 )
nodes/vertex/13/node = SubResource( 8 )
nodes/vertex/13/position = Vector2( 440, 100 )
nodes/vertex/14/node = SubResource( 9 )
nodes/vertex/14/position = Vector2( -640, 260 )
nodes/vertex/15/node = SubResource( 10 )
nodes/vertex/15/position = Vector2( -640, 120 )
nodes/vertex/16/node = SubResource( 11 )
nodes/vertex/16/position = Vector2( -600, -20 )
nodes/vertex/connections = PoolIntArray( 3, 0, 4, 0, 3, 1, 5, 0, 6, 0, 7, 0, 7, 1, 8, 1, 7, 0, 10, 0, 7, 2, 10, 2, 8, 0, 10, 1, 4, 0, 12, 0, 5, 0, 12, 1, 12, 0, 13, 0, 13, 0, 8, 0, 14, 0, 15, 0, 15, 0, 16, 0, 15, 2, 16, 1, 11, 0, 3, 0, 16, 0, 11, 0, 10, 0, 0, 0 )

[sub_resource type="ShaderMaterial" id=19]
shader = SubResource( 18 )

[sub_resource type="SphereShape" id=20]
radius = 4.0

[sub_resource type="SpatialMaterial" id=21]
albedo_texture = ExtResource( 6 )

[sub_resource type="SphereMesh" id=22]
radius = 4.0
height = 8.0

[sub_resource type="ShaderMaterial" id=23]
shader = ExtResource( 13 )
shader_param/INSTANCE_COUNT = 1
shader_param/terrain_size = null
shader_param/terrain_diameter = 256.0
shader_param/uv1_scale = Vector2( 1, 1 )
shader_param/use_triplanar = 0

[sub_resource type="MultiMesh" id=24]
instance_count = 3
mesh = ExtResource( 12 )
transform_2d_array = PoolVector2Array( 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0 )

[node name="Spatial" type="Spatial"]

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.766044, 0.642788, 0, -0.642788, 0.766044, 18.9, 72, 87.8 )

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.819152, 0.573576, 0, -0.573576, 0.819152, 0, 60, 0 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource( 4 )

[node name="CSGSphere" type="CSGSphere" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -39, 0, 0 )

[node name="MeshInstance" type="MeshInstance" parent="."]
visible = false
material_override = SubResource( 1 )
mesh = SubResource( 2 )
material/0 = null

[node name="CSGMesh" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 127, 0, 0 )
mesh = SubResource( 3 )

[node name="CSGMesh2" type="CSGMesh" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -24, 10, -47 )
mesh = SubResource( 4 )

[node name="clipmap_2" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.7759, 12.1596, 11.5276 )
visible = false
material_override = SubResource( 19 )
mesh = ExtResource( 1 )
material/0 = null
material/1 = null

[node name="RigidBody" type="RigidBody" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 33.5, 42.9, 56.3 )

[node name="CollisionShape" type="CollisionShape" parent="RigidBody"]
shape = SubResource( 20 )

[node name="MeshInstance2" type="MeshInstance" parent="RigidBody"]
material_override = SubResource( 21 )
mesh = SubResource( 22 )
material/0 = null

[node name="MultiMeshInstance" type="MultiMeshInstance" parent="."]
visible = false
material_override = SubResource( 23 )
multimesh = SubResource( 24 )
