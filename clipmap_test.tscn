[gd_scene load_steps=5 format=2]

[ext_resource path="res://addons/cartographer/plane.obj" type="ArrayMesh" id=1]
[ext_resource path="res://uv.png" type="Texture" id=2]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
//render_mode skip_vertex_transform;

uniform sampler2D texture;

void vertex() {
//	vec3 off = vec3(0, 0, 0) + VERTEX;
//	vec4 ws = WORLD_MATRIX * vec4(VERTEX, 1.0);
//	vec2 uv = (ws.xz / 256.0) + 0.5;
//	float height = texture(texture, uv).r * 20.0;
//
//	VERTEX = vec3(off.x, height, off.z);
	
	vec3 off = vec3(70, 0, 0) * fract(TIME / 4.0);
	off = floor(off / 16.0) * 16.0;
	
	vec2 uv = ((VERTEX.xz + off.xz) / 256.0) + 0.5;
	off.y = texture(texture, uv).r * 20.0;
	UV = uv;
	VERTEX += off;
}

void fragment() {
	ALBEDO = texture(texture, UV).rgb;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/texture = ExtResource( 2 )

[node name="Spatial" type="Spatial"]

[node name="MeshInstance" type="MeshInstance" parent="."]
material_override = SubResource( 2 )
mesh = ExtResource( 1 )
material/0 = null

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 73, 148 )
far = 1000.0

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 0.707107, 0.707107, 0, -0.707107, 0.707107, 0, 122, 124 )
